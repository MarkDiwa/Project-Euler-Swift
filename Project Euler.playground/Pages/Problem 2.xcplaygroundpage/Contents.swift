import Foundation

/*
 
 Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 
 */

func sumOfEvenFibonacciSequence(until maxNumber: Int, firstNum: Int = 1, secondNum: Int = 2) -> Int {
    var firstNumber = firstNum
    var secondNumber = secondNum
    var fibonacci = [firstNumber,secondNumber]
    repeat {
        let sum = firstNumber + secondNumber
        fibonacci.append(sum)
        firstNumber = secondNumber
        secondNumber = sum
    } while firstNumber + secondNumber <= maxNumber
    return fibonacci.filter({
        $0 % 2 == 0
    }).reduce(0, +)
}

print(sumOfEvenFibonacciSequence(until: 4000000)) // 4613732
